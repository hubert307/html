<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>兩階段成長折現估價模型(DCF) 2024-03-07</title>
    <style>
    /* Reset CSS */
    body {
        font-family: 'Microsoft JhengHei', sans-serif;
        font-size: 16px;
		font-weight: bold;
        line-height: 1.5;
        color: #333;
        background-color: #f4f4f4;
    }
	
	.fancytable{ border:1px solid #cccccc; width:50%; border-collapse:collapse;}
	.fancytable td{ border:1px solid #cccccc; color:#555555; text-align:center; line-height:28px;}
	.headerrow{ background-color:#A4C2F4;}
	.headerrow td{ color:#ffffff; text-align:center;}
	.datarowodd{ background-color:#ffffff;}
	.dataroweven{ background-color:#efefef;}
	.datarowodd td{ background-color:#ffffff;}
	.dataroweven td{ background-color:#efefef;}
    </style>
</head>
<body>
    <h1>兩階段成長折現估價模型 (DCF)</h1>
    <form id="dcf-form">
        <!-- Input fields for DCF parameters -->
        <label for="free-cash-flow">每股參數 (元):</label>
        <input type="number" id="free-cash-flow" value="" required>
        <br>
        <label for="growth-rate-1to5">1-5 年成長率 (%):</label>
        <input type="number" id="growth-rate-1to5" value="" required>
        <br>
        <label for="growth-rate-6to10">6-10 年成長率 (%):</label>
        <input type="number" id="growth-rate-6to10" value="" required>
        <br>
        <label for="discount-rate">折現率 (%):</label>
        <input type="number" id="discount-rate" value="10" required>
        <br>
        <label for="perpetual-growth-rate">永續成長率 (%):</label>
        <input type="number" id="perpetual-growth-rate" value="2" required>
        <br>
		<button type="button" onclick="document.getElementById('dcf-form').reset()">清除</button>
        <button type="button" onclick="calculateDCF()">計算</button>
    </form>
    <div id="result"></div>

    <script>
        // 計算 DCF 的函數
        function calculateDCF() {
			// 0. 前置處理
            // Extracting input values
            const freeCashFlow = parseFloat(document.getElementById('free-cash-flow').value);
            const growthRate1to5 = parseFloat(document.getElementById('growth-rate-1to5').value) / 100;
            const growthRate6to10 = parseFloat(document.getElementById('growth-rate-6to10').value) / 100;
            const discountRate = parseFloat(document.getElementById('discount-rate').value) / 100;
            const perpetualGrowthRate = parseFloat(document.getElementById('perpetual-growth-rate').value) / 100;

            // Initialize arrays to store growthRates, growthRateResults, and discountedCashFlows
            let growthRates = [];
            let growthRateResults = [];
            let discountedCashFlows = [];

			// 1. 第 1~5 年的數字計算
            // Calculate for 1-5 years
            let discountedCashFlows1to5 = 0;
            for (let i = 1; i <= 5; i++) {
                // Calculate growth rate result (每股參數:首段成長率採用標準算法)
                const growthRateResult = freeCashFlow * Math.pow(1 + growthRate1to5, i);
                growthRateResults.push(growthRateResult);
                growthRates.push(growthRate1to5 * 100);

                // Calculate discounted cash flow for each year (每股現值:對每股參數進行折現)
                const discountedCashFlow = growthRateResult / Math.pow(1 + discountRate, i);
                discountedCashFlows.push(discountedCashFlow);

				// Summary (數字累計)
                discountedCashFlows1to5 += discountedCashFlow;
            }
			
			// 2. 第 6~10 年的數字計算
            // Calculate for 6-10 years
            let discountedCashFlows6to10 = 0;
            for (let i = 6; i <= 10; i++) {
                // Calculate growth rate result (每股參數:與前段的成長率不同，因此不能從頭算，只能接續結果放大)
                const growthRateResult = growthRateResults[i-2] * (1 + growthRate6to10);
                growthRateResults.push(growthRateResult);
                growthRates.push(growthRate6to10 * 100);

                // Calculate discounted cash flow for each year (每股現值:對每股參數進行折現)
                const discountedCashFlow = growthRateResult / Math.pow(1 + discountRate, i);
                discountedCashFlows.push(discountedCashFlow);
				
				// Summary (數字累計)
                discountedCashFlows6to10 += discountedCashFlow;
            }

			// 3. 第 11 年的數字計算
            // Calculate for 11 years
            let discountedCashFlows11 = 0;
            for (let i = 11; i <= 11; i++) {
                // Calculate growth rate result (每股參數:與前兩段的成長率不同，因此不能從頭算，只能接續結果放大)
                const growthRateResult = growthRateResults[i-2] * (1 + perpetualGrowthRate);
                growthRateResults.push(growthRateResult);
                growthRates.push(perpetualGrowthRate * 100);

                // Calculate discounted cash flow for the 11th year (每股現值:對每股參數進行折現)
                const discountedCashFlow = growthRateResult / Math.pow(1 + discountRate, i);
                discountedCashFlows.push(discountedCashFlow);
            }

			// 4. 終值/無限年的永續價值
            // Calculate value beyond 10 years (無限年的永續價值 aka 終值的公式不同，先算完再折現)
            let valueBeyond10Years = growthRateResults[9] * (1 + perpetualGrowthRate) / (discountRate - perpetualGrowthRate);

            // Calculate discounted cash flow (折現 10 年)
			// https://redhouse.statementdog.com/archives/3813
            valueBeyond10Years = valueBeyond10Years / Math.pow(1 + discountRate, 10);

            // 5. 總價值
            // Total value
            const totalValue = discountedCashFlows1to5 + discountedCashFlows6to10 + valueBeyond10Years;

			// 6. 顯示結果
            // Display the results including discountedCashFlows
            displayResults(growthRates, growthRateResults, discountedCashFlows, discountedCashFlows1to5, discountedCashFlows6to10, valueBeyond10Years);
        }

        // Function to display DCF results (顯示結果)
        function displayResults(growthRates, growthRateResults, discountedCashFlows, discountedCashFlows1to5, discountedCashFlows6to10, valueBeyond10Years) {
            let resultString = '';

            // Display discountedCashFlows for each year
            resultString += `<br>
            <table border="1" class="fancytable">
                <tr class="headerrow">
                    <th>年</th>
                    <th>每股參數</th>
                    <th>成長率</th>
                    <th>每股現值</th>
                </tr>`;

            for (let i = 1; i <= 10; i++) {
				if(i % 2) {
					resultString += `<tr class="datarowodd">`;
				}
				else {
				    resultString += `<tr class="dataroweven">`;
				}
                resultString += `<th>${i}</th>`;										//年
                resultString += `<th>${growthRateResults[i - 1].toFixed(1)} 元</th>`;	//每股參數
                resultString += `<th>${growthRates[i - 1].toFixed(1)} %</th>`;			//成長率
                resultString += `<th>${discountedCashFlows[i - 1].toFixed(1)} 元</th>`;	//每股現值
                resultString += `</tr>`;
            }

            // Check Only
            //resultString += `<tr>`;
            //resultString += `<th>${11}</th>`;										//年
            //resultString += `<th>${growthRateResults[10].toFixed(1)} 元</th>`;	//每股參數
            //resultString += `<th>${growthRates[10].toFixed(1)} %,</th>`;			//成長率
            //resultString += `<th>${discountedCashFlows[10].toFixed(1)} 元</th>`;	//每股現值
            //resultString += `</tr>`;
            resultString += `</table><br>`;

			//------ Table2 ------
			resultString += `<table border="1" class="fancytable">`;
			resultString += `<tr class="headerrow"><th>項目</th><th>計算結果</th></tr>`;
			//------------------
			
			// Display the discountedCashFlow for the 11th year
            const discountedCashFlow11 = growthRateResults[10];
            resultString += `<tr class="datarowodd"><th>第 11 年的每股參數</th><th>${discountedCashFlow11.toFixed(1)} 元</th></tr>`;
			
            // Display the total discountedCashFlows for 1-10 years
            const totalDiscountedCashFlows1to10 = discountedCashFlows1to5 + discountedCashFlows6to10;
            //const totalDiscountedCashFlows1to10 = discountedCashFlows.slice(0, 10).reduce((acc, current) => acc + current, 0);
            resultString += `<tr class="dataroweven"><th>每股現值合計 (1-10 年)</th><th>${totalDiscountedCashFlows1to10.toFixed(1)} 元</th></tr>`;

            // Display value beyond 10 years
            resultString += `<tr class="datarowodd"><th>終值/無限年的永續價值</th><th>${valueBeyond10Years.toFixed(1)} 元</th></tr>`;

            // Calculate total value
            const totalValue = totalDiscountedCashFlows1to10 + valueBeyond10Years;
            resultString += `<tr class="dataroweven"><th>總價值</th><th>${totalValue.toFixed(1)} 元</th></tr>`;
			
			//------------------
            resultString += `</table><br>`;
			//------------------
			
            // Display the result in the 'result' div
            document.getElementById('result').innerHTML = resultString;
        }
    </script>
</body>
</html>
